---
import "../styles/global.css";
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE } from "../consts";
import Sidebar from "../components/Sidebar.astro";
import MobileModal from "../components/MobileModal.astro";
import ThemePopover from "../components/ThemePopover.astro";
import SearchModal from "../components/SearchModal.astro";
import { Image } from "astro:assets";
import ToC from "../components/ToC.astro";
import { Icon } from "astro-icon/components";
import FormattedDate from "../components/FormattedDate.astro";
import Footer from "../components/Footer.astro";

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  readingTime,
  wordCount,
  slug,
  headings = [],
  tags: rawTags = [],
  prevPost = null,
  nextPost = null,
} = Astro.props;
const tags = Array.isArray(rawTags) ? rawTags : rawTags ? [rawTags] : [];
---

<html lang="en" class="dark">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body data-pagefind-body>
    <header class="md:hidden m-2 sticky top-1 z-40" data-pagefind-ignore>
      <div class="relative bg-background rounded-lg">
        <div class="absolute inset-0 bg-accent rounded-lg"></div>
        <div class="relative flex justify-between items-center p-3">
          <h1 class="font-bold text-2xl text-foreground">{SITE_TITLE}</h1>

          <div class="flex items-center gap-2">
            <button
              id="mobile-search-trigger"
              data-modal-trigger="search-modal"
              aria-label="Search"
              class="p-2 rounded-md hover:bg-muted/50 transition-colors"
            >
              <Icon name="mdi:magnify" class="h-5 w-5 text-foreground" />
            </button>

            <div class="md:hidden" id="theme-popover-header">
              <ThemePopover />
            </div>

            <button
              id="menu-toggle-btn"
              aria-label="Mobile navigation button"
              class="p-2 rounded-md hover:bg-muted/50 transition-colors"
            >
              <svg
                id="burger-icon"
                class="h-6 w-6 text-foreground"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
              <svg
                id="close-icon"
                class="h-6 w-6 hidden text-foreground"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </header>

    <div
      class="flex min-h-screen md:mx-auto max-w-7xl gap-0 md:gap-4 p-0 md:p-6"
    >
      <div
        class="hidden md:block md:w-64 md:flex-shrink-0 md:sticky md:top-6 md:h-full"
        data-pagefind-ignore
      >
        <Sidebar />
      </div>

      <div
        id="backdrop"
        class="fixed inset-0 bg-black/20 z-30 opacity-0 pointer-events-none transition-opacity duration-300 md:hidden"
      >
      </div>

      <div
        id="mobile-menu"
        class="fixed top-20 left-2 right-2 rounded-lg transform scale-95 opacity-0 pointer-events-none transition-all duration-300 ease-in-out z-50 md:hidden max-h-[calc(100vh-6rem)]"
      >
        <MobileModal />
      </div>

      <main class="flex-1 w-full overflow-x-hidden">
        <div class="w-full max-w-4xl mx-auto rounded-md space-y-4 min-h-fit">
          <div
            class="w-full bg-accent p-3 md:p-6 rounded-md space-y-3 md:space-y-4 overflow-hidden"
          >
            <div class="flex justify-between items-start">
              <a
                href="javascript:history.back()"
                aria-label="Back"
                class="rounded-md hover:bg-muted/50 items-center gap-1 flex transition-colors cursor-pointer p-1 md:p-2"
              >
                <Icon
                  name="mdi:arrow-left"
                  class="text-foreground w-4 h-4 md:w-5 md:h-5"
                />
                <span class="text-xs md:text-base">Back</span>
              </a>
              <div
                class="flex flex-wrap gap-1 md:gap-2 text-xs md:text-sm text-muted-foreground"
              >
                <span>{Math.ceil(readingTime.minutes)} min</span>
                <span>â€¢</span>
                <span>{wordCount} words</span>
              </div>
            </div>

            <h1
              transition:name={`title-${slug}`}
              class="text-xl md:text-4xl font-semibold leading-tight"
              data-pagefind-meta="title"
            >
              {title}
            </h1>

            <div class="flex flex-col sm:flex-row gap-2 sm:gap-3 md:gap-12">
              <div class="flex items-center gap-2">
                <Icon
                  name="mdi:calendar"
                  class="p-1 rounded bg-accent w-5 h-5 md:w-8 md:h-8 md:p-1.5 flex-shrink-0"
                />
                <div class="flex flex-col">
                  <FormattedDate date={pubDate} />
                  {
                    updatedDate && (
                      <span class="text-xs text-muted-foreground">
                        Updated: <FormattedDate date={updatedDate} />
                      </span>
                    )
                  }
                </div>
              </div>
              {
                tags.length > 0 && (
                  <div class="flex gap-2">
                    <div class="flex gap-2 items-center">
                      <Icon
                        name="mdi:tag"
                        class="bg-accent p-1 rounded w-5 h-5 md:w-8 md:h-8 md:p-1.5 flex-shrink-0"
                      />
                      <div class="flex flex-wrap gap-1">
                        {tags.map((tag, i) => (
                          <a
                            href={`/tags/${tag}`}
                            class="text-xs md:text-sm hover:text-blue-500 transition-colors cursor-pointer"
                          >
                            {tag.charAt(0).toUpperCase() + tag.slice(1)}
                            {i < tags!.length - 1 ? " /" : ""}
                          </a>
                        ))}
                      </div>
                    </div>
                  </div>
                )
              }
            </div>

            {
              heroImage && (
                <div class="w-full">
                  <Image
                    transition:name={`image-${slug}`}
                    src={heroImage}
                    alt={"Hero Image"}
                    width={1200}
                    height={800}
                    class="w-full h-auto max-h-[420px] object-cover rounded-md"
                  />
                </div>
              )
            }
            <div class="post-content w-full min-w-0 overflow-x-hidden">
              <slot />
            </div>
          </div>

          <div
            class="flex flex-col sm:flex-row justify-between items-stretch sm:items-center bg-accent p-3 md:p-4 rounded-md gap-3 sm:gap-0"
            data-pagefind-ignore
          >
            <div class="flex-1">
              {
                prevPost && (
                  <a
                    href={`/blog/${prevPost.id}/`}
                    class="group flex items-center gap-2 hover:bg-muted/50 p-2 rounded-md transition-colors w-full sm:w-auto"
                  >
                    <Icon
                      name="mdi:chevron-left"
                      class="h-4 w-4 md:h-5 md:w-5 text-muted-foreground group-hover:text-foreground flex-shrink-0"
                    />
                    <div class="flex flex-col min-w-0">
                      <span class="text-xs text-muted-foreground">
                        Previous
                      </span>
                      <span class="text-sm font-medium truncate group-hover:text-foreground">
                        {prevPost.title}
                      </span>
                    </div>
                  </a>
                )
              }
            </div>

            <div class="flex-1 flex justify-start sm:justify-end">
              {
                nextPost && (
                  <a
                    href={`/blog/${nextPost.id}/`}
                    class="group flex items-center gap-2 hover:bg-muted/50 p-2 rounded-md transition-colors w-full sm:w-auto text-left sm:text-right"
                  >
                    <div class="flex flex-col min-w-0 order-1 sm:order-none">
                      <span class="text-xs text-muted-foreground">Next</span>
                      <span class="text-sm font-medium truncate group-hover:text-foreground">
                        {nextPost.title}
                      </span>
                    </div>
                    <Icon
                      name="mdi:chevron-right"
                      class="h-4 w-4 md:h-5 md:w-5 text-muted-foreground group-hover:text-foreground flex-shrink-0 order-2 sm:order-none"
                    />
                  </a>
                )
              }
            </div>
          </div>

          <Footer />
        </div>
      </main>
      <aside
        class="hidden xl:block xl:w-64 xl:flex-shrink-0"
        data-pagefind-ignore
      >
        <div class="sticky top-6 space-y-2">
          <button
            data-modal-trigger="search-modal"
            class="flex bg-accent items-center w-full rounded-md cursor-pointer p-2 hover:bg-accent/80 transition-colors"
          >
            <Icon name="mdi:magnify" class="h-4 w-4 text-zinc-400" />
            <span class="ml-2 flex-1 text select-none text-left">Search...</span
            >
            <kbd
              class="ml-2 rounded bg-zinc-100 px-1.5 py-0.5 text-[10px] font-medium text-zinc-500"
              >Ctrl + K</kbd
            >
          </button>
          <ToC headings={headings} />
        </div>
      </aside>
    </div>

    <SearchModal id="search-modal" />

    <script>
      function initMobileMenu() {
        const menuButton = document.getElementById("menu-toggle-btn");
        const mobileMenu = document.getElementById("mobile-menu");
        const burgerIcon = document.getElementById("burger-icon");
        const closeIcon = document.getElementById("close-icon");
        const themeToggle = document.querySelector(
          "#theme-popover-header input[data-theme-toggle]",
        );
        const backdrop = document.getElementById("backdrop");

        function closeAllModals() {
          mobileMenu?.classList.add(
            "opacity-0",
            "scale-95",
            "pointer-events-none",
          );
          mobileMenu?.classList.remove(
            "opacity-100",
            "scale-100",
            "pointer-events-auto",
          );
          burgerIcon?.classList.remove("hidden");
          closeIcon?.classList.add("hidden");

          if (themeToggle && themeToggle instanceof HTMLInputElement) {
            themeToggle.checked = false;
          }

          backdrop?.classList.add("opacity-0", "pointer-events-none");
          backdrop?.classList.remove("opacity-100", "pointer-events-auto");
        }

        function showBackdrop() {
          backdrop?.classList.remove("opacity-0", "pointer-events-none");
          backdrop?.classList.add("opacity-100", "pointer-events-auto");
        }

        function toggleMenu() {
          const isOpen = !mobileMenu?.classList.contains("opacity-0");

          if (isOpen) {
            closeAllModals();
          } else {
            if (themeToggle && themeToggle instanceof HTMLInputElement) {
              themeToggle.checked = false;
            }

            mobileMenu?.classList.remove(
              "opacity-0",
              "scale-95",
              "pointer-events-none",
            );
            mobileMenu?.classList.add(
              "opacity-100",
              "scale-100",
              "pointer-events-auto",
            );
            burgerIcon?.classList.add("hidden");
            closeIcon?.classList.remove("hidden");
            showBackdrop();
          }
        }

        function handleThemeToggle() {
          if (themeToggle && themeToggle instanceof HTMLInputElement) {
            if (themeToggle.checked) {
              mobileMenu?.classList.add(
                "opacity-0",
                "scale-95",
                "pointer-events-none",
              );
              mobileMenu?.classList.remove(
                "opacity-100",
                "scale-100",
                "pointer-events-auto",
              );
              burgerIcon?.classList.remove("hidden");
              closeIcon?.classList.add("hidden");
              showBackdrop();
            } else {
              backdrop?.classList.add("opacity-0", "pointer-events-none");
              backdrop?.classList.remove("opacity-100", "pointer-events-auto");
            }
          }
        }

        if (menuButton) {
          const clonedButton = menuButton.cloneNode(true) as HTMLElement;
          menuButton.parentNode?.replaceChild(clonedButton, menuButton);
          clonedButton.addEventListener("click", toggleMenu);
        }

        if (backdrop) {
          const clonedBackdrop = backdrop.cloneNode(true) as HTMLElement;
          backdrop.parentNode?.replaceChild(clonedBackdrop, backdrop);
          clonedBackdrop.addEventListener("click", closeAllModals);
        }

        if (themeToggle) {
          themeToggle.addEventListener("change", handleThemeToggle);
        }
      }

      initMobileMenu();
      document.addEventListener("astro:page-load", initMobileMenu);
    </script>
  </body>
</html>
