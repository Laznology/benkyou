---
import "../styles/global.css";
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import Sidebar from "../components/Sidebar.astro";
import { Image } from "astro:assets";
const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  readingTime,
  wordCount,
  slug,
  tags: rawTags = [],
} = Astro.props;
const tags = Array.isArray(rawTags) ? rawTags : rawTags ? [rawTags] : [];
import { Icon } from "astro-icon/components";
import FormattedDate from "../components/FormattedDate.astro";
---

<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <header class="flex md:hidden justify-between items-center p-2 border-b">
      <h1 class="font-bold !text-2xl">Hinode</h1>

      <button
        id="menu-toggle-btn"
        aria-label="Mobile navigation button"
        class="z-20"
      >
        <svg
          id="burger-icon"
          class="h-6 w-6"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <svg
          id="close-icon"
          class="h-6 w-6 hidden"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </header>

    <div class="flex min-h-screen md:mx-auto max-w-6xl gap-2 md:gap-4 md:p-6">
      <div class="hidden md:block md:w-64 md:flex-shrink-0">
        <Sidebar />
      </div>

      <aside
        id="mobile-menu"
        class="fixed top-0 left-0 bg-background w-full transform -translate-x-full transition-transform duration-300 ease-in-out z-10 md:hidden"
      >
        <Sidebar />
      </aside>

      <div id="overlay" class="fixed inset-0 bg-black/10 z-0 hidden md:hidden">
      </div>

      <main class="flex-1 min-w-0">
        <div
          class="w-full bg-accent p-3 md:p-6 max-w-4xl rounded-md space-y-4 md:space-y-6 min-h-fit overflow-hidden"
        >
          <div class="flex flex-col md:flex-row md:justify-between gap-2 md:gap-0">
            <h1
              transition:name={`title-${slug}`}
              class="text-lg md:text-4xl font-semibold border-b-2 border-dashed w-fit line-clamp-2 md:line-clamp-none"
            >
              {title}
            </h1>
            <div class="flex flex-wrap gap-2 md:space-x-3 text-xs md:text-sm text-muted-foreground">
              <span>Time: {Math.ceil(readingTime.minutes)} min</span>
              <span>Words: {wordCount}</span>
            </div>
          </div>
          <div class="flex flex-col md:flex-row gap-3 md:gap-12">
            <div class="flex items-center gap-2">
              <Icon
                name="mdi:calendar"
                class="p-1 rounded bg-accent w-6 h-6 md:w-8 md:h-8 md:p-1.5 flex-shrink-0"
              />
              <FormattedDate date={pubDate} />
            </div>
            {
              tags.length > 0 && (
                <div class="flex gap-2">
                  <div class="flex gap-2 items-center">
                    <Icon
                      name="mdi:tag"
                      class="bg-accent p-1 rounded w-6 h-6 md:w-8 md:h-8 md:p-1.5 flex-shrink-0"
                    />
                    <div class="flex flex-wrap gap-1">
                      {tags.map((tag, i) => (
                        <span class="text-xs md:text-sm">
                          {tag}
                          {i < tags!.length - 1 ? " /" : ""}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              )
            }
          </div>

          <div class="w-full">
            <Image
              transition:name={`image-${slug}`}
              src={heroImage}
              alt={"Hero Image"}
              class="w-full h-auto object-cover rounded-md"
            />
          </div>
          <slot />
        </div>
      </main>
    </div>

    <script>
      const menuButton = document.getElementById("menu-toggle-btn");
      const mobileMenu = document.getElementById("mobile-menu");
      const overlay = document.getElementById("overlay");
      const burgerIcon = document.getElementById("burger-icon");
      const closeIcon = document.getElementById("close-icon");

      function toggleMenu() {
        mobileMenu?.classList.toggle("-translate-x-full");

        overlay?.classList.toggle("hidden");

        burgerIcon?.classList.toggle("hidden");
        closeIcon?.classList.toggle("hidden");
      }

      menuButton?.addEventListener("click", toggleMenu);
      overlay?.addEventListener("click", toggleMenu);
    </script>
  </body>
</html>
