---
import "../styles/global.css";
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import Sidebar from "../components/Sidebar.astro";
import MobileModal from "../components/MobileModal.astro";
import ThemePopover from "../components/ThemePopover.astro";
import SearchModal from "../components/SearchModal.astro";
import { Icon } from "astro-icon/components";
import Footer from "../components/Footer.astro";

interface Props {
  title?: string;
  description?: string;
}

const { title = SITE_TITLE, description = SITE_DESCRIPTION } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body data-pagefind-ignore>
    <header class="md:hidden m-2 sticky top-1 z-40">
      <div class="relative bg-background rounded-lg">
        <div class="absolute inset-0 bg-accent rounded-lg"></div>
        <div class="relative flex justify-between items-center p-3">
          <div class="flex items-center gap-3">
            <h1 class="font-bold text-2xl text-foreground">Hinode</h1>
            <button
              data-modal-trigger="search-modal"
              class="flex bg-accent items-center rounded-md cursor-pointer p-2 hover:bg-accent/80 transition-colors"
            >
              <Icon name="mdi:magnify" class="h-4 w-4 text-zinc-400" />
              <span class="ml-2 text-sm select-none text-left hidden sm:block">Search...</span>
              <kbd
                class="ml-2 rounded bg-zinc-100 px-1.5 py-0.5 text-[10px] font-medium text-zinc-500 hidden sm:block"
                >Ctrl + K</kbd
              >
            </button>
          </div>

          <div class="flex items-center gap-2">
            <button
              id="mobile-search-trigger"
              data-modal-trigger="search-modal"
              aria-label="Search"
              class="p-2 rounded-md hover:bg-muted/50 transition-colors"
            >
              <Icon name="mdi:magnify" class="h-5 w-5 text-foreground" />
            </button>
            
            <div class="md:hidden" id="theme-popover-header">
              <ThemePopover />
            </div>
        
        <button
          id="menu-toggle-btn"
          aria-label="Mobile navigation button"
          class="p-2 rounded-md hover:bg-muted/50 transition-colors"
        >
          <svg
            id="burger-icon"
            class="h-6 w-6 text-foreground"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <svg
            id="close-icon"
            class="h-6 w-6 hidden text-foreground"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        </div>
      </div>
    </header>

    <div class="flex min-h-screen md:mx-auto max-w-7xl gap-2 md:gap-4 md:p-6">
      <div class="hidden md:block md:w-64 md:flex-shrink-0 md:sticky md:top-6 md:h-fit md:max-h-screen">
        <Sidebar />
      </div>

      <div id="backdrop" class="fixed inset-0 bg-black/20 z-30 opacity-0 pointer-events-none transition-opacity duration-300 md:hidden"></div>
      
      <div
        id="mobile-menu"
        class="fixed top-20 left-2 right-2 rounded-lg transform scale-95 opacity-0 pointer-events-none transition-all duration-300 ease-in-out z-50 md:hidden max-h-[calc(100vh-6rem)]"
      >
        <MobileModal />
      </div>

      <main class="flex-1">
        <div class="w-full max-w-4xl md:p-6 rounded-md space-y-6 min-h-fit">
          <slot />
          <Footer />
        </div>
      </main>
    </div>
    
    <SearchModal id="search-modal" />
    
    <script>
      function initMobileMenu() {
        const menuButton = document.getElementById("menu-toggle-btn");
        const mobileMenu = document.getElementById("mobile-menu");
        const burgerIcon = document.getElementById("burger-icon");
        const closeIcon = document.getElementById("close-icon");
        const themeToggle = document.querySelector('#theme-popover-header input[data-theme-toggle]');
        const backdrop = document.getElementById("backdrop");

        function closeAllModals() {
          mobileMenu?.classList.add("opacity-0", "scale-95", "pointer-events-none");
          mobileMenu?.classList.remove("opacity-100", "scale-100", "pointer-events-auto");
          burgerIcon?.classList.remove("hidden");
          closeIcon?.classList.add("hidden");
          
          if (themeToggle && themeToggle instanceof HTMLInputElement) {
            themeToggle.checked = false;
          }

          backdrop?.classList.add("opacity-0", "pointer-events-none");
          backdrop?.classList.remove("opacity-100", "pointer-events-auto");
        }

        function showBackdrop() {
          backdrop?.classList.remove("opacity-0", "pointer-events-none");
          backdrop?.classList.add("opacity-100", "pointer-events-auto");
        }

        function toggleMenu() {
          const isOpen = !mobileMenu?.classList.contains("opacity-0");
          
          if (isOpen) {
            closeAllModals();
          } else {
            if (themeToggle && themeToggle instanceof HTMLInputElement) {
              themeToggle.checked = false;
            }
            
            mobileMenu?.classList.remove("opacity-0", "scale-95", "pointer-events-none");
            mobileMenu?.classList.add("opacity-100", "scale-100", "pointer-events-auto");
            burgerIcon?.classList.add("hidden");
            closeIcon?.classList.remove("hidden");
            showBackdrop();
          }
        }

        function handleThemeToggle() {
          if (themeToggle && themeToggle instanceof HTMLInputElement) {
            if (themeToggle.checked) {
              mobileMenu?.classList.add("opacity-0", "scale-95", "pointer-events-none");
              mobileMenu?.classList.remove("opacity-100", "scale-100", "pointer-events-auto");
              burgerIcon?.classList.remove("hidden");
              closeIcon?.classList.add("hidden");
              showBackdrop();
            } else {
              backdrop?.classList.add("opacity-0", "pointer-events-none");
              backdrop?.classList.remove("opacity-100", "pointer-events-auto");
            }
          }
        }

        if (menuButton) {
          const clonedButton = menuButton.cloneNode(true) as HTMLElement;
          menuButton.parentNode?.replaceChild(clonedButton, menuButton);
          clonedButton.addEventListener("click", toggleMenu);
        }

        if (backdrop) {
          const clonedBackdrop = backdrop.cloneNode(true) as HTMLElement;
          backdrop.parentNode?.replaceChild(clonedBackdrop, backdrop);
          clonedBackdrop.addEventListener("click", closeAllModals);
        }
        
        if (themeToggle) {
          themeToggle.addEventListener("change", handleThemeToggle);
        }
      }

      initMobileMenu();
      document.addEventListener("astro:page-load", initMobileMenu);
    </script>
  </body>
</html>
