---
import Layout from "../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import { Icon } from "astro-icon/components";
import readingTime from "reading-time";
import { Image } from "astro:assets";

const postsRaw = await getCollection("blog");
const posts = postsRaw.map((post: CollectionEntry<"blog">) => {
  const stats = readingTime(post.body!);
  return {
    ...post,
    readingTime: stats,
    wordCount: stats.words,
  };
});
---

<Layout>
  <div class="space-y-6">
    <div class="flex justify-between">
      <h1 class="text-3xl font-semibold border-b-3 border-dashed w-fit">Home</h1>
    </div>
    <div class="space-y-6">
      {
        posts.map((post) => (
          <a
            href={`/blog/${post.id}/`}
            class="group bg-accent rounded-lg p-4 grid md:grid-cols-2 gap-4 md:items-stretch"
          >
            <div class="aspect-[16/9] w-full object-cover order-1 md:order-2">
              {post.data.heroImage ? (
                <Image
                  class="object-cover w-full h-full rounded-md"
                  transition:name={`image-${post.id}`}
                  src={post.data.heroImage}
                  alt={post.data.title}
                />
              ) : (
                <div class="object-cover rounded-md bg-gray-200 w-full h-full flex items-center justify-center">
                  <span class="text-sm md:text-base">No image</span>
                </div>
              )}
            </div>

            <div class="flex flex-col justify-between order-2 md:order-1">
              <div class="space-y-2">
                <div class="flex flex-wrap gap-2 items-center text-sm md:text-base">
                  <span>
                    Time : {Math.ceil(post.readingTime.minutes)} Minutes
                  </span>
                  {"|"}
                  <span>Word : {post.wordCount}</span>
                </div>

                <h1
                  class="text-lg md:text-3xl font-bold"
                  transition:name={`title-${post.id}`}
                >
                  {post.data.title}
                </h1>

                <div class="text-xs md:text-sm text-muted-foreground flex flex-wrap gap-3">
                  <div class="flex items-center gap-2">
                    <Icon name="mdi:calendar" class="w-4 h-4 md:w-5 md:h-5" />
                    <FormattedDate date={post.data.pubDate} />
                  </div>
                  {post?.data?.tags && (
                    <div class="flex gap-2 items-center">
                      <Icon name="mdi:tag" class="w-4 h-4 md:w-5 md:h-5" />
                      {post.data.tags.map((tag, i) => (
                        <span class="text-xs md:text-sm">
                          {tag}
                          {i < post.data.tags!.length - 1 ? " /" : ""}
                        </span>
                      ))}
                    </div>
                  )}
                </div>

                <p class="mt-2 text-sm md:text-base line-clamp-2 text-ellipsis">
                  {post.data.description}
                </p>
              </div>
            </div>
          </a>
        ))
      }
    </div>
  </div>
</Layout>
