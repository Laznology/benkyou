---
import Layout from "../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import { Icon } from "astro-icon/components";
import readingTime from "reading-time";
import { Image } from "astro:assets";

const postsRaw = await getCollection("blog");
const posts = postsRaw.map((post: CollectionEntry<"blog">) => {
  const stats = readingTime(post.body!);
  return {
    ...post,
    readingTime: stats,
    wordCount: stats.words,
  };
});
---

<Layout>
  <div class="space-y-6">
    <h1 class="text-3xl font-semibold border-b-3 border-dashed w-fit">Home</h1>
    <div class="space-y-6">
      {
        posts.map((post) => (
          <a
            href={`/blog/${post.id}/`}
            class="group bg-accent rounded-lg p-4 grid grid-cols-[1fr_auto] gap-4"
          >
            <div class="space-y-1">
              <div class="flex gap-2.5 items-center">
                <span>
                  Time : {Math.ceil(post.readingTime.minutes)} Minutes
                </span>
                {"|"}
                <span>Word : {post.wordCount}</span>
              </div>
              <h1
                class="text-xl md:text-4xl w-fit font-bold"
                transition:name={`title-${post.id}`}
              >
                {post.data.title}
              </h1>
              <div class="text-sm text-muted-foreground flex gap-3">
                <div class="text-xl flex items-center gap-2">
                  <Icon name="mdi:calendar" class="w-5 h-5" />
                  <FormattedDate date={post.data.pubDate} />
                </div>
                {post?.data?.tags && (
                  <div class="flex gap-2 items-center">
                    <Icon name="mdi:tag" class="w-5 h-5" />
                    {post.data.tags.map((tag, i) => (
                      <span class="py-1 text-md">
                        {tag}
                        {i < post.data.tags!.length - 1 ? " /" : ""}
                      </span>
                    ))}
                  </div>
                )}
              </div>
              <p class="mt-2 text-base overflow-hidden line-clamp-2 text-ellipsis">
                {post.data.description}
              </p>
            </div>
            <div class="aspect-[16/9] w-68 object-cover">
              {post.data.heroImage ? (
                <Image
                  class="object-cover rounded-md"
                  transition:name={`image-${post.id}`}
                  src={post.data.heroImage}
                  alt={post.data.title}
                />
              ) : (
                <div class="object-cover rounded-md bg-gray-200 w-full h-full flex items-center justify-center">
                  <span>No image</span>
                </div>
              )}
            </div>
          </a>
        ))
      }
    </div>
  </div>
</Layout>
